name: "[sm] Tests"
on:
  - push
jobs:
  Build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 13.x
    steps:
      - uses: actions/checkout@v1

      - name: "[sm] Set env"
        run: |
          echo ::set-env name=SM_ACT_GIT_REMOTE::git@github.com:${GITHUB_REPOSITORY}.git
          echo ::set-env name=SM_ACT_GIT_REF::${GITHUB_REF}
          echo ::set-env name=SM_ACT_GIT_SHA::${GITHUB_SHA}
          echo ::set-env name=SM_ACT_GIT_SHA7::${GITHUB_SHA:0:7}
          echo ::set-env name=SM_ACT_RUN_ID::${GITHUB_RUN_ID}
          echo ::set-env name=SM_ACT_ACTOR_URI::github.com/${GITHUB_ACTOR}
          echo ::set-env name=SM_ACT_TRIGGER_EVENT::${GITHUB_EVENT_NAME}
          echo ::set-env name=SM_ACT_JOB_NAME::${GITHUB_JOB}

      - name: "[sm] Set branch env"
        if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
        run: |
          echo ::set-env name=SM_ACT_GIT_BRANCH::${GITHUB_REF#refs/*/}

      - name: "[sm] Set tag env"
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo ::set-env name=SM_ACT_GIT_TAG::${GITHUB_REF#refs/*/}

      - name: "[sm] Show SM_* env"
        run: |
          printenv | grep -e ^SM_

      - name: "[sm] Show GITHUB_* env"
        run: |
          printenv | grep -e ^GITHUB_

      - name: "[sm] Show * env"
        run: |
          printenv

      - name: "[sm] Show fs status"
        run: |
          pwd
          ls -al
          git branch
          git status
